import { async, ComponentFixture, TestBed, inject } from '@angular/core/testing';

import { LoginComponent } from './login.component';
import { AuthService } from './auth.service';
import { FormsModule } from '@angular/forms';
import { HttpClientModule } from '@angular/common/http';

class MockAuthService extends AuthService{
  public isUserAuthenticated(){
    return true;
  }
}

fdescribe('LoginComponent', () => {
  let component: LoginComponent;
  let fixture: ComponentFixture<LoginComponent>;
  let testBedAuthService: AuthService;
  let testBedInjectorService: AuthService;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ LoginComponent ],
      imports: [FormsModule, HttpClientModule],
      providers: [AuthService]
    })
    .compileComponents();
  }));

  beforeEach(() => {

    TestBed.overrideComponent(
      LoginComponent,
      {set: {providers: [{provide: AuthService, useClass: MockAuthService}]}}

     );

    fixture = TestBed.createComponent(LoginComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
    testBedAuthService = TestBed.get(AuthService);


  });

  it('should create', () => {
    expect(component).toBeTruthy();
    
  });

  it('should validate TestBed.get service', ()=>{
      expect(testBedAuthService instanceof AuthService).toBeTruthy();
  });

  it('should compare services', 
    inject([AuthService],(injectAuthService: MockAuthService) =>{
      expect(injectAuthService).toBe(testBedAuthService);
  }));

  it('should test component injector', ()=>{
    testBedInjectorService = fixture.debugElement.injector.get(AuthService);
    expect(testBedInjectorService instanceof AuthService).toBeTruthy();
  });
});
